//................................................................................................................
//
//	CEffectManager.h																	By wxywxy
//
//................................................................................................................
#ifndef __CEFFECTMANAGER_H
#define __CEFFECTMANAGER_H

#pragma warning(disable:4786)

#include <list>

#include "CEffectBase.h"
#include "Billboard.h"
#include "CVAniModel.h"

using namespace std;

#define MAKE_EFFECT(ID,PC)				 case (ID): return MAKE_##PC((ID),(pSrc),(pDest),(pExtraInfo),0.0f)
#define MAKE_EFFECT_TIMER(ID,PC,TIME)    case (ID): return MAKE_##PC((ID),(pSrc),(pDest),(pExtraInfo),(TIME))

// 스킬 임펙트 프레임시 소스 , 데스트 스팟 이펙트 출력
#define MAKE_SKILL_SPOT_SRC_AND_DEST(ID,SSNUM,SST,ST,DSN,DST,DT) \
	case (ID): return MakeSkillSpotSrcAndDest((pSrc),(pDest),(SSNUM),(SST),(ST),(DSN),(DST),(DT),(pExtraInfo),0.0f)

// 스킬 임펙트 프레임시 소스 , 리스트 스팟 이펙트 출력
#define MAKE_SKILL_SPOT_SRC_AND_LIST(ID,SSNUM,SST,ST,DSN,DST,DT) \
	case (ID): return MakeSkillSpotSrcAndList((pSrc),(pDest),(SSNUM),(SST),(ST),(DSN),(DST),(DT),(pExtraInfo),0.0f)

// 스킬 임펙트 프레임시 소스 스팟 이펙트 출력
#define MAKE_SKILL_SPOT_SRC(ID,SSNUM,SST,ST) \
	case (ID): return MakeSkillSpotSrc((pSrc),(pDest),(SSNUM),(SST),(ST),(pExtraInfo),0.0f)
// 지속스킬 맞는이펙트 연결
#define MAKE_SKILLED_SRC(ID,SSNUM,SST,ST) \
	case (ID): return MakeSkilledSrc((pSrc),(SSNUM),(SST),(ST))

// 기본공격 임펙트 프레임시 소스 이펙트 출력 StandTargetHit처리
#define MAKE_STAND_ATTACK(ID,SSNUM,SST,ST) \
	case (ID): return MakeStandAttackProcess((pSrc),(pDest),(SSNUM),(SST),(ST),-1,0,0,(pExtraInfo));

// 기본공격 임펙트 프레임시 소스 이펙트 출력 StandTargetHit처리
#define MAKE_STAND_ATTACK_DEST(ID,SSNUM,SST,ST,DNUM,DDT,DT) \
	case (ID): return MakeStandAttackProcess((pSrc),(pDest),(SSNUM),(SST),(ST),(DNUM),(DDT),(DT),(pExtraInfo));

#define MAKE_EFFECT_SET_SRC_SPOT(ID,SSNUM,SST,ST) \
	case (ID): return MakeEffectSetSrcLinkProcess((pSrc),(SSNUM),(SST),(ST));

#define MAKE_SKILL_FLY(ID,FNUM,FTYPE,TNUM,TTYPE,ANUM,RT,BNUM) \
	case (ID): return MakeCommonFlySkill((ID),(pSrc),(pDest),(pExtraInfo),(FNUM),(FTYPE),(TNUM),(TTYPE),(ANUM),(RT),(BNUM),TRUE);

#define MAKE_SPOT_EFFECT(ID,ENUM,TYPE,ST,DT) \
	case (ID): return MakeSpotEffect((ID),(pSrc),(ENUM),(TYPE),(ST),(DT));

#define MAKE_SPOT_EFFECT_DEST(ID,ENUM,TYPE,ST,DT) \
	case (ID): return MakeSpotEffect((ID),(pDest),(ENUM),(TYPE),(ST),(DT));

#define MAKE_ATTACK_FLY(ID,FNUM,FTYPE,TNUM,TTYPE,ANUM,RT,BNUM) \
	case (ID): return MakeCommonFlySkill((ID),(pSrc),(pDest),(pExtraInfo),(FNUM),(FTYPE),(TNUM),(TTYPE),(ANUM),(RT),(BNUM),FALSE);

#define MAKE_DEFENCE_PET_MOTION(ID,BonNum) \
	case (ID): return MAKE_EF_DEFENSE_PET_BMOTION((ID),(pSrc),(pDest),(pExtraInfo),0.0f,BonNum)

#define MAKE_BEELINEBOW(ID,TANUM,DNUM,DT,DelT,TYPE) \
	case (ID): return MAKE_BEE_LINE_BOW((ID),(pSrc),(pDest),(pExtraInfo),TANUM,DNUM,DT,DelT,TYPE)

#define MAKE_GTOWEREFFECT(ID,SRCBON,BILTYPE,TATYPE,ATTACKEDID,ATTACKEDTYPE) \
	case (ID): return MAKE_G_TOWER_EFFECT((ID),(pSrc),(pDest),(pExtraInfo),SRCBON,BILTYPE,TATYPE,ATTACKEDID,ATTACKEDTYPE)

#define MAKE_CANNONEFECT(ID,IMFRAME,SRCBON,BILTYPE,TATYPE,GETID,GETTYPE,PERID,PERTYPE,EXPLOID,EXPLOTYPE,ATTACKEDID,ATTACKEDTYPE) \
	case (ID): return MAKE_CANNON_EFECT((ID),(pSrc),(pDest),(pExtraInfo),IMFRAME,SRCBON,BILTYPE,TATYPE,GETID,GETTYPE,PERID,PERTYPE,EXPLOID,EXPLOTYPE,ATTACKEDID,ATTACKEDTYPE)

#define MAKE_GOLEMEFFECT(ID,MIMFRAME,IMFRAME,TATYPE,RIGHTID,RIGHTTYPE,LEFTID,LEFTTYPE,EXPLOID,EXPLOTYPE,ATTACKEDID,ATTACKEDTYPE) \
	case (ID): return MAKE_GOLEM_EFFECT((ID),(pSrc),(pDest),(pExtraInfo),MIMFRAME,IMFRAME,TATYPE,RIGHTID,RIGHTTYPE,LEFTID,LEFTTYPE,EXPLOID,EXPLOTYPE,ATTACKEDID,ATTACKEDTYPE)


typedef enum EDamageLevel
{
	DL_WEAK					 = 0 ,								// 약
		DL_STRONG					 ,								// 강	
		DL_CRITICAL													// 크리티컬
};

typedef enum 
{
		CREATE_EFFECT			     = 0 ,								// 이펙트 생성
		CREATE_EFFECT_LOCK_ONETIME       ,								// 이펙트 락후 처음 실행
		CREATE_EFFECT_LOCK			     ,								// 이펙트 락 
		CREATE_EFFECT_UNLOCK											// 리펙트 락 풀린후 이펙트 생성후 -> CREATE_EFFECT 로
		
}CREATE_EFFECT_MANAGE_STATE;

//................................................................................................................
// 이펙터 기본값이외의 정보 ( 피타격 정보 )
//................................................................................................................
class CEffectManager
{
public:
	
	CEffectManager();
	~CEffectManager();
	
public:
	
	int Update(float dtime);
	int Render(float dtime);
	
	int Create(EFFECT_ID id,Character *pSrc,Character *pDest,DWORD event,BYTE critical, 
		WORD skillcode, struct _STargetInfo *pTargetInfo, 
		long lStartTime, DWORD SkillUnique = 0 );
	int Create(EFFECT_ID id,Character *pSrc,Character *pDest);
	
	int CreateEffect(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);// 모든 이펙트 생성
	
	///--JAPAN_BUG_MODIFY	 
	int Delete(EFFECT_ID id,Character *pSrc,Character *pDest, DWORD dSkillCode = 0);
	
	
	int Delete(DWORD SkillUnique);									// 광역 마법 지우기
	int DeleteOnManager(Character *pSrc);							// 이펙트 매니저 내에서만 지우기
	int Delete(Character *pSrc);									// 이펙트 매니저 캐릭터 내에 큐도 지우기
	int DeleteOnlySrc(Character *pSrc);							// 이펙트 매니저 캐릭터 내에 큐도 지우기
	int DeleteNow(Character *pSrc);								// 이펙트 매니저 캐릭터 내에 큐도 지우기
	int DeleteLink(Character *pSrc);
	
	HRESULT InvalidateDeviceObject();
	HRESULT RestoreDeviceObject();
	
	
	//...........................................................................................................
	// 플레이어와의 거리
	//...........................................................................................................
	BOOL ISOverLength(Character *pSrc, float fDist = 120.0f);
	//...................................................................................................................
	// 광역 마법 데미지 
	//...................................................................................................................
	int DamageLandEffect(Character *pDest,int DamageValue,int SkillCode,BYTE ISDie);
	
	int DamageSkillEffect( Character *pDest, int DamageValue, int SkillCode, BYTE ISDie );
	
	//...................................................................................................................
	// 광역 마법 Appear 시 타겟 없을때
	//...................................................................................................................
	int AddLandEffect(WORD SkillCode,DWORD SkillUnique,DWORD CellX,DWORD CellY);
	
	//................................................................................................................
	// 셀에 찍는 이펙트 처리 By wxywxy 
	//................................................................................................................
	int PopLandEffectBase(CEffectBase **ppEffectBase);
	int PushLandEffectBase(CEffectBase **ppEffectBase);
	
	void AllClear(void);
	void DeleteAllLandEffect(void);
	
	int PushEffect(CEffectBase **ppEffectBase);
	
	int InitDevice(void);											// InitDevice ( 각 클래스 별로 로딩할 데이터들 )
	int DeleteDevice(void);										// DeleteDevice ( 각 클래스 별로 지울 데이터들 )
	
	void EffectTargetHit(Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);
	
	int  UseItemEffect(long Unique,DWORD ItemCode);
	
	// 공격 시작 프레임 0 에서 처리할부분 ( T.T )
	int  AttackStartFrame(Character *pSrc);
	
	// 몬스터 맞을때 나는 소리
	int  MonsterAttackedSoundPlay(Character *pSrc,EDamageLevel level);
	
	// 플레이어 죽었을때 이펙트 지우기
	void DeletePlayerEffect(Character *pSrc);
	// 다른 플레이어 죽었을때 이펙트 지우기
	void DeleteOtherPlayerEffect(Character *pSrc);
	// NPC 죽었을때 이펙트 지우기
	void DeleteNPCEffect(Character *pSrc);
	
	int  GetSkillAttackedSound(DWORD aSkillCode,Character *pSrc);
	int  GetSkillImfactSound(DWORD aSkillCode,Character *pSrc);
	int  GetSkillStartSound(DWORD aSkillCode,Character *pSrc,BOOL ISCheck = FALSE );
	
	
	// 명상시 이펙트
	int  SetRestSkill(Character *pSrc);
	// 명상시 이펙트 지우기
	int  DeleteRestSkill(Character *pSrc);
	
	// 캐릭터 존재여부 
	int  CheckCharacter(Character *pSrc);
	int  CheckCharacter(Character *pSrc,Character *pDest);
	
	// 화살 몸에 붙은거
	int CreateArrowStuck(Character *pSrc,float AddRad,D3DXVECTOR3 vAddPos,int LinkBone);
	
	// 캐릭터 죽었남 살았남?
	int CheckDie(Character *pSrc);
	
	int PushReadyLandEffect(DWORD SkillUnique);
	int PopReadyLandEffect(DWORD SkillUnique);
	int ISFindReadLandEffect(DWORD SkillUnique);
	bool IsFindEffectID(Character *pChar ,  EFFECT_ID id );

	//...................................................................................................................
	// 인첸트시 이펙트 달기
	//...................................................................................................................
	int CreateWeaponEnChantEffect(Character *pChar,BYTE Level);
 
	//...................................................................................................................
	// 엘다스톤 레벨 얻기 ( 무기만 , 무기아니면 -1 )
	//...................................................................................................................
	int GetWeaponEldaStoneLevel(WORD Code);
	int GetWeaponMixEldaStoneLevel(WORD Code);

	int DeleteWeaponEnChantEffect(Character *pSrc);


	//...................................................................................................................
	// 방어구 인첸트시 이펙트 달기
	//...................................................................................................................
	int CreateDefenceEnChantEffect(Character *pChar, BYTE Level);
	int GetDefenceEldaStoneLevel(WORD code);
	int GetDefenceEldaStoneInfo(WORD code);
	int DeleteDefenceEnChantEffect(Character *pSrc);
	int GetMagicBookLevelEffect(Character *pChar,BYTE &Level );

//...........................................................................................................
// 공통 스킬 루틴
//...........................................................................................................
public:
	//...........................................................................................................
	// 스킬 이펙트 1 : 1 로 임팩트시 데미지주는것
	//...........................................................................................................
	int CEffectManager::MakeSkillSpotSrcAndDest(Character *pSrc, Character *pDest,
												int SrcSetNum  , int SrcSetType  , float SrcTimer,
												int DestSetNum , int DestSetType , float DestTimer,
												LPEFFECT_EXTRA_INFO pExtraInfo,float Timer );


	//...........................................................................................................
	// 스킬 이펙트 1 : N 로 임팩트시 데미지주는것
	//...........................................................................................................
	int MakeSkillSpotSrcAndList(Character *pSrc, Character *pDest,
												int SrcSetNum  , int SrcSetType  , float SrcTimer,
												int DestSetNum , int DestSetType , float DestTimer,
												LPEFFECT_EXTRA_INFO pExtraInfo,float Timer );

	//...........................................................................................................
	// 스킬 이펙트 소스 쪽만 
	//...........................................................................................................
	int MakeSkillSpotSrc(Character *pSrc, Character *pDest,
						int SrcSetNum  , int SrcSetType  , float SrcTimer,
						LPEFFECT_EXTRA_INFO pExtraInfo,float Timer );
	//...........................................................................................................
	// 지속스킬 맞는이펙트 연결
	//...........................................................................................................
	int MakeSkilledSrc(Character *pSrc,int SrcSetNum,int SrcSetType,float SrcTimer);

	int MakeCommonFlySkill(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,
		int FrontNum,int FrontType,
		int TailNum ,int TailType,
		int AttackedNum,DWORD RangeTime,int BoneNum,BOOL ISSKILL);
	
	int MakeSpotEffect(EFFECT_ID id,Character *pSrc,int EffectNum,int SrcSetType,float STime,float DTimer);

private:

	void Destroy(void);

//...................................................................................................................
// 광역스킬시 바닥에 찍어주는 루틴
//...................................................................................................................
private:
	
	 BOOL			 m_ISLandMarkDisplay;
	 BYTE			 m_DisplayLandMarkType;			// 0 : X 표시 , 1 : 표시
	 CBillboard		 m_LandMark;
	 CBillboard		 m_DisableLandMark;
	 float			 m_LandMarkRange;

public:
	 
	 int  RenderToLandMark(float dtime);
	 void SetLandMark(BOOL ISDisplay,float Size,float AttackRange = 100.0f );
	 BOOL GetLandMark(void)				{ return m_ISLandMarkDisplay;      }
	 BYTE GetLandMarkType(void)			{ return m_DisplayLandMarkType; }
	 
	 std::list	<CEffectBase *>		m_LandEffectList;
	 std::list	<DWORD>				m_ReadyLandEffectList;
	 std::list <CEffectBase *> GetEffectList();
	 


//................................................................................................................
// 기본 공격 처리 부분
//................................................................................................................
public:
	int  IsNoneWeapon(Character *pSrc);																							// 무기 장착 유무
	void StandAttack( Character *pSrc, Character *pDest, DWORD EventType, DWORD Cell, BOOL IsKill,
					  DWORD Damage, BOOL IsCritical, long lStartTime );		// 기본 공격시 처리 루틴 
	
	void StandTargetHit(Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);										// 기본 공격 타격 처리
	void StandTargetHitNoDamage(Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);								// 기본 공격 타격 처리 ( 데미지 없음 & 효과 있음 )
	void StandTargetHitOnlyDamage(Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);								// 기본 공격 타격 처리 ( 데미지 있음 & 효과 없음 )

	void StandAttackHand(Character *pSrc,Character *pDest,DWORD EventType,DWORD Cell,BOOL IsKill,DWORD Damage,BOOL IsCritical);	// 기본 손 공격 이펙트 처리 루틴	
	DWORD GetRealHP(Character *pSrc);
	DWORD GetHP(Character *pSrc);
	EDamageLevel DamageLevel(Character *pSrc,DWORD Damage,BOOL IsCritical);														// 데미지 레벨

	//.........................................................................................................
	// 지속성 스킬이 있다면 이펙트 달아주기
	//.........................................................................................................
	void CreateKeepupSkill(int skillcode,Character *pSrc,Character *pDest,BOOL ISExcept);

	//.............................................................................................................
	// 지속성 스킬 이펙트 지우기
	//.............................................................................................................
	void DeleteKeepupSkill(int skillcode,Character *pSrc);

	//.............................................................................................................
	// 플레이어 지속성 스킬 이펙트 모두 지우기
	//.............................................................................................................
	void DeleteAllKeepupSkillOnPlayer(void);

	//.............................................................................................................
	// 1:N 이펙트 시작 
	//.............................................................................................................
	void EffectCreateLock(void);
	//.............................................................................................................
	// 1:N 이펙트 마지막에 호출 ( 이펙트 발동 )
	//.............................................................................................................
	void EffectCreateUnLock(void);

	
	//.............................................................................................................
	// 스킬 코드 좋은거냐? ( 모션 데이터 없음 )
	//.............................................................................................................
	BOOL ISGoodSkill(DWORD SkillCode);

	//.............................................................................................................
	// 실시간 이펙트 ( 오라형 ) 처리 ( 자기는 제외 , 데미지 동작은 하지 않음 )
	//.............................................................................................................
	void CreateAuroraEffect(DWORD SkillCode,BYTE TargetNum,SObjectIDPtr TargetList , int FrontierHolyLevel  = 0 );

	//.............................................................................................................
	// 실시간 이펙트 ( 오라형 ) 처리 ( 플레이어 , 데미지 동작은 하지 않음 )
	//.............................................................................................................
	void CreateKeepupSkillStart(DWORD SkillCode,WORD *pEffectType,DWORD *pEffectValue,WORD EffectMaxValue);
	
private:

	//............................................................................................................
	// 기본 칼 공격
	//............................................................................................................
	int MAKE_EF_STAND_SWORD_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//............................................................................................................
	// 기본 책 공격
	//............................................................................................................
	int MAKE_EF_STAND_BOOK_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//............................................................................................................
	// 기본 지팡이 공격
	//............................................................................................................
	int MAKE_EF_STAND_STICK_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//............................................................................................................
	// 기본 이빨 공격
	//............................................................................................................
	int MAKE_EF_STAND_TOOTH_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//............................................................................................................
	// 기본 둔기 공격
	//............................................................................................................
	int MAKE_EF_STAND_DULL_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//............................................................................................................
	// 기본 발톱 공격
	//............................................................................................................
	int MAKE_EF_STAND_NAIL_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 칼 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_SWORD_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer); // 	칼날 기본 데미지 ( 약 )
	int MAKE_EF_STAND_SWORD_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer); // 	칼날 기본 데미지 ( 중 )
	int MAKE_EF_STAND_SWORD_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer); // 	칼날 기본 데미지 ( 강 )

	//............................................................................................................
	// 책 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_BOOK_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	마법기본공격(책) 데미지 ( 약 ) 
	int MAKE_EF_STAND_BOOK_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);	 // 	마법기본공격(책) 데미지 ( 중 ) 
	int MAKE_EF_STAND_BOOK_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	마법기본공격(책) 데미지 ( 강 ) 

	//............................................................................................................
	// 지팡이 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_STICK_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	마법기본공격(지팡이) 데미지 ( 약 ) 
	int MAKE_EF_STAND_STICK_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	마법기본공격(지팡이) 데미지 ( 중 ) 
	int MAKE_EF_STAND_STICK_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	마법기본공격(지팡이) 데미지 ( 강 ) 

	//............................................................................................................
	// 이빨 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_TOOTH_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	이빨 기본 공격   데미지 ( 약 ) 
	int MAKE_EF_STAND_TOOTH_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	이빨 기본 공격   데미지 ( 중 ) 
	int MAKE_EF_STAND_TOOTH_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	이빨 기본 공격   데미지 ( 강 ) 

	//............................................................................................................
	// 둔기 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_DULL_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	둔기 기본 공격   데미지 ( 약 ) 
	int MAKE_EF_STAND_DULL_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	둔기 기본 공격   데미지 ( 중 ) 
	int MAKE_EF_STAND_DULL_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  // 	둔기 기본 공격   데미지 ( 강 ) 

	//............................................................................................................
	// 발톱 공격 데미지 ( 0 ~ 2 )
	//............................................................................................................
	int MAKE_EF_STAND_NAIL_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	발톱 기본 공격  데미지 ( 약 )
	int MAKE_EF_STAND_NAIL_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	발톱 기본 공격  데미지 ( 중 )
	int MAKE_EF_STAND_NAIL_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	발톱 기본 공격  데미지 ( 강 )

	//............................................................................................................
	// 루갈 공격 데미지 ( 약 강)
	//............................................................................................................
	int MAKE_EF_RUGAL_BASIC_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	기본 공격  데미지 ( 약 )
	int MAKE_EF_RUGAL_CRI_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	기본 공격  데미지 ( 약 )
	int MAKE_EF_RUGALSOLDART_BASIC_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	기본 공격  데미지 ( 약 )
	int MAKE_EF_RUGALSOLDART_CRI_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	기본 공격  데미지 ( 약 )
	int MAKE_EF_RUGALTEMPEST_CRI_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);  //	기본 공격  데미지 ( 약 )


	//............................................................................................................
	// 기본 활 공격 데미지 이펙트
	//............................................................................................................
	int MAKE_EF_BOW_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);		//	기본 활 공격 데미지 이펙트 ( 약 , 중 , 강 )

	//............................................................................................................
	// 노려쏘기
	//............................................................................................................
	int MAKE_EF_GLAER_BOW_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);		//	기본 활 공격 데미지 이펙트 ( 약 , 중 , 강 )

	
	//............................................................................................................
	// 더블샷
	//............................................................................................................
	int MAKE_EF_DOUBLESHOT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);		//	기본 활 공격 데미지 이펙트 ( 약 , 중 , 강 )


	//............................................................................................................
	// 발등 쏘기
	//............................................................................................................
	int MAKE_EF_FOOT_BOW_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);		//	기본 활 공격 데미지 이펙트 ( 약 , 중 , 강 )
	
	//............................................................................................................
	// 발등 쏘기 ( 화살 ) 링크 된거
	//............................................................................................................
	int MAKE_EF_FOOT_BOW_LINK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 화염 연타
	//............................................................................................................
	int MAKE_EF_FIRE_SMACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 빙의
	//............................................................................................................
	int MAKE_EF_POSSESSED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 빙신 나타나기
	//............................................................................................................
	int MAKE_EF_APPEAR_BING(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//............................................................................................................
	// 빙의 해제
	//............................................................................................................
	int MAKE_EF_POSSESSED_CANCEL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	속사 ( 아처 )
	//...............................................................................................................
	int MAKE_EF_QUICK_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	집중 ( 아처 )
	//...............................................................................................................
	int MAKE_EF_FOCUS_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	치유의 화살 ( 아처 )
	//...............................................................................................................
	int MAKE_EF_REFRESH_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	벽뢰각 ( 샤먼 )
	//...............................................................................................................
	int MAKE_EF_FOOT_LIGHTNING(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	절대 방어
	//...............................................................................................................
	int MAKE_EF_ABSOLUTE_DP(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	마인의 각력
	//...............................................................................................................
	int MAKE_EF_FOOT_STRENGTH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 	기본 손 공격 
	//...............................................................................................................
	int MAKE_EF_HAND_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	기본 손 공격 
	//...............................................................................................................
	int MAKE_EF_HAND_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	기본 샤먼 수정구 공격
	//...............................................................................................................
	int MAKE_EF_BALL_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_BALL_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	받아치기
	//...............................................................................................................
	int MAKE_EF_BOUND_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 파이어 아머 ( 지속성 )
	//................................................................................................................
	int MAKE_EF_FIRE_ARMOR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 아이스 실드 ( 지속성 )
	//................................................................................................................
	int MAKE_EF_ICE_SHILED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 몸에 붙는 이펙트
	//................................................................................................................
	int MAKE_EF_SRC_LINK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 따뜻한 빛
	//................................................................................................................
	int MAKE_EF_WARM_LIGHTED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 기열파
	//...............................................................................................................
	int MAKE_EF_HAND_PAR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

//................................................................................................................
// 이펙트 생성 부분
//................................................................................................................
private:
	
	//............................................................................................................
	// 걷기 먼지
	//............................................................................................................
	int MAKE_EF_WALK_DUST(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 걷기 물
	//............................................................................................................
	int MAKE_EF_WALK_WAVE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//............................................................................................................
	// 라이트닝
	//............................................................................................................
	int MAKE_EF_LIGHTNING0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 화이어 볼
	//............................................................................................................
	int MAKE_EF_FIREBALL0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//............................................................................................................
	// 락 프레스
	//............................................................................................................
	int MAKE_EF_ROCKPRESS0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//............................................................................................................
	// 우든 소드
	//............................................................................................................
	int MAKE_EF_WOODENSWORD0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//............................................................................................................
	// 락 실드 ( 0 ~ 4 )
	//............................................................................................................
	int MAKE_EF_ROCK_SHIELD0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 쾌검
	//................................................................................................................
	int MAKE_EF_REFRESH_SWORD0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 강검
	//................................................................................................................
	int MAKE_EF_STRONG_SWORD0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 노려 베기
	//................................................................................................................
	int MAKE_EF_V_CUT_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 급소 베기
	//................................................................................................................
	int MAKE_EF_CAP_SWORD_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 모아 베기
	//................................................................................................................
	int MAKE_EF_GATHER_CUT0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 아이스 스피어
	//................................................................................................................
	int MAKE_EF_ICESPIRE0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 무장 해제
	//................................................................................................................
	int MAKE_EF_WEAPON_CRASH0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 회피
	//................................................................................................................
	int MAKE_EF_AVOID0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 버블 크래쉬
	//................................................................................................................
	int MAKE_EF_BUBBLE_CRASH0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 회복 아이템 1 ( 즉효성 )
	//................................................................................................................
	int MAKE_EF_RECOVERY_ITEM1_0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 회복 아이템 2 ( 지속성 )
	//................................................................................................................
	int MAKE_EF_RECOVERY_ITEM2_0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 기본 활 공격
	//................................................................................................................
	int MAKE_EF_BOW_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

// 3차 이펙트 추가
private:
	//................................................................................................................
	// 	나이트 기본 공격
	//................................................................................................................

	int MAKE_EF_NIGHT_STAND_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 	나이트 기본 공격 데미지
	//...............................................................................................................
	int MAKE_EF_NIGHT_STAND_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	나이트 방패 가격 데미지
	//...............................................................................................................
	int MAKE_EF_SHILED_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	방어 태세
	//...............................................................................................................
	int MAKE_EF_DEFEND_SETUP(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	슬레이어 기본 공격
	//...............................................................................................................
	int MAKE_EF_SLAYER_STAND_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	슬레이어 기본 공격 데미지
	//...............................................................................................................
	int MAKE_EF_SLAYER_STAND_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 	피의 폭주
	//...............................................................................................................
	int MAKE_EF_BLOOD_RUNAWAY(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	불굴의 의지
	//...............................................................................................................
	int MAKE_EF_LIVE_MIND(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	프리스트 기본 공격
	//...............................................................................................................
	int MAKE_EF_PRIEST_STAND_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_PRIEST_STAND_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	프리스트 힐링
	//...............................................................................................................
	int MAKE_EF_PRIEST_HEAL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	킵업 펌프 
	//...............................................................................................................
	int MAKE_EF_KEEPUP_PUMP(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 프리스트 디스펠
	//................................................................................................................
	int MAKE_EF_PRIEST_DISPELL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	프리스트 행운의 여신
	//...............................................................................................................
	int MAKE_EF_LUCKY_GOD(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 	프리스트 행운의 여신 ( 당하는 쪽 )
	//...............................................................................................................
	int MAKE_EF_LUCKY_GODED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 프리스트 부활
	//...............................................................................................................
	int MAKE_EF_REVIVAL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 머록스 나무 정령 ( 공격 )
	//...............................................................................................................
	int MAKE_EF_NPC_WOOD_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 머록스 나무 정령 ( 데미지 )
	//...............................................................................................................
	int MAKE_EF_NPC_WOOD_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 블러켄 화이어볼 공격
	//...............................................................................................................
	int MAKE_EF_NPC_FIRE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_NPC_FIREED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
		
	//...............................................................................................................
	// 파이몬 우두머리 때리기 
	//...............................................................................................................
	int MAKE_EF_NPC_HEAVY_STICK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 파이몬 우두머리 때리기 데미지
	//...............................................................................................................
	int MAKE_EF_NPC_HEAVY_STICKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 발구르기
	//...............................................................................................................
	int MAKE_EF_FOOT_QUAKE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 도발 
	//...............................................................................................................
	int MAKE_EF_ATTACKED_FOCUS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 검진
	//...............................................................................................................
	int MAKE_EF_SWORD_FLASH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 파티 힐링
	//...............................................................................................................
	int MAKE_EF_PARTY_HEAL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 파이몬 바닥 찍기 스킬
	//...............................................................................................................
	int MAKE_EF_NPC_QUAKE_HEAVY_STICK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 대원참
	//...............................................................................................................
	int MAKE_EF_CIRCLE_SWORD(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 물방울 뿜기
	//...............................................................................................................
	int MAKE_EF_NPC_BUBBLE_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// NPC 도끼로 바닥 찍기
	//...............................................................................................................
	int MAKE_EF_AXE_LAND_HIT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 입 -> 불
	//...............................................................................................................
	int MAKE_EF_MOUTH_FIRE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 과일 공격
	//...............................................................................................................
	int MAKE_EF_FRUIT_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 짱돌 공격
	//...............................................................................................................
	int MAKE_EF_ROCK_SHOT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 가스 공격
	//...............................................................................................................
	int MAKE_EF_GAS_SHOT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 게이지 전송
	//...............................................................................................................
	int MAKE_EF_GAGE_TRANS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// NPC 지팡이 공격 ( 기본 공격 )
	//...............................................................................................................
	int MAKE_EF_NPC_STICK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// NPC 지팡이 공격 데미지 ( 기본 공격 )
	//...............................................................................................................
	int MAKE_EF_NPC_STICK_ATTACKED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 부가 효과
	//..............................................................................................................
	int MAKE_EF_ADDEFFECT_BASE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 이그니션
	//..............................................................................................................
	int MAKE_EF_EGNEETION(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_EGNEETION_ED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 차지
	//..............................................................................................................
	int MAKE_EF_CHARGE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 칠링 터치
	//..............................................................................................................
	int MAKE_EF_CR_TOUCH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 힐링 웨이브
	//..............................................................................................................
	int MAKE_EF_HEAL_WAVE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 펄리닉 더스트
	//..............................................................................................................
	int MAKE_EF_PEAL_DUST(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 포이즌 시드
	//..............................................................................................................
	int MAKE_EF_POISON_SEED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 기합
	//..............................................................................................................
	int MAKE_EF_SELF_SHOUT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 은신 
	//..............................................................................................................
	int MAKE_EF_HIDE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 암연살
	//..............................................................................................................
	int MAKE_EF_MAYUNSAL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 질주
	//..............................................................................................................
	int MAKE_EF_SCAPMPER(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 월영
	//..............................................................................................................
	int MAKE_EF_MOMENT_HIDE	(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 오월의 비
	//..............................................................................................................
	int MAKE_EF_BOW_RAIN(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 저격
	//..............................................................................................................
	int MAKE_EF_SNIPER_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 치유의 비
	//..............................................................................................................
	int MAKE_EF_HEAL_RAIN_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 각성의 화살
	//..............................................................................................................
	int MAKE_EF_COMBO_ADD_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 침묵의 화살
	//..............................................................................................................
	int MAKE_EF_WHISPER_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 해제의 화살
	//..............................................................................................................
	int MAKE_EF_CANCEL_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 장화의 화살
	//..............................................................................................................
	int MAKE_EF_CLEAR_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 아이스 레인
	//..............................................................................................................
	int MAKE_EF_ICE_RAIN(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);


	// 파이어 레인 
	int MAKE_EF_FIRE_RAIN(EFFECT_ID id, Character *pSrc , Character *pDest , LPEFFECT_EXTRA_INFO pExtraInfo , float Timer);

		
	//..............................................................................................................
	// 프레임 스톰
	//..............................................................................................................
	int MAKE_EF_FRAME_STORM(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 라이트닝 스피어
	//..............................................................................................................
	int MAKE_EF_LIGHTNIG_SPIRE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 타이니 웨이브
	//..............................................................................................................
	int MAKE_EF_TYNEE_WAVE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 빅프레스
	//..............................................................................................................
	int MAKE_EF_BIG_PRESS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// Son Brush
	//..............................................................................................................
	int MAKE_EF_SON_BURSH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 텔레포트
	//..............................................................................................................
	int MAKE_EF_TELEPORT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 슬립
	//..............................................................................................................
	int MAKE_EF_SLEEP_STICK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 마나 버퍼링
	//..............................................................................................................
	int MAKE_EF_MANA_BUFFERING(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 리턴
	//..............................................................................................................
	int MAKE_EF_RETURN_HOME(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 셀프 힐링
	//..............................................................................................................
	int MAKE_EF_SELF_HEAL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 디스펠 베드
	//................................................................................................................
	int MAKE_EF_DISPELL_BAD(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 블레스
	//................................................................................................................
	int MAKE_EF_BRESS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 디펜스 실드
	//................................................................................................................
	int MAKE_EF_DEPENCE_SHILED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 디펜스 오로라
	//................................................................................................................
	int MAKE_EF_DEFENSE_AURA(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 홀리 라이트
	//................................................................................................................
	int MAKE_EF_HOLY_LIGHT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 봉인의 빛
	//................................................................................................................
	int MAKE_EF_UNCOMBO(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 분신
	//................................................................................................................
	int MAKE_EF_SELF_COPY(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//................................................................................................................
	// 연기파
	//................................................................................................................
	int MAKE_EF_ENERGY(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 선풍열각
	//................................................................................................................
	int MAKE_EF_CIRCLE_KICK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 치유의 빛
	//................................................................................................................
	int MAKE_EF_HEAL_LIGHT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//................................................................................................................
	// 디텍트
	//................................................................................................................
	int MAKE_EF_DETECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	아이스 레인 맞음
	//...............................................................................................................
	int MAKE_EF_ICE_RAINED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	
	//...............................................................................................................
	//	파이어 레인 맞음
	//...............................................................................................................
	int MAKE_EF_FIRE_RAINED(EFFECT_ID id , Character *pSrc , Character *pDest, LPEFFECT_EXTRA_INFO pExtraInfo , float Timer );



	//...............................................................................................................
	//	버블 힐
	//...............................................................................................................
	int MAKE_EF_HEAL_BUBBLE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	버블 힐
	//...............................................................................................................
	int MAKE_EF_BIG_BUBBLE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	HP 흡수
	//...............................................................................................................
	int MAKE_EF_HP_SUCTION(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	HP 흡수
	//...............................................................................................................
	int MAKE_EF_SP_SUCTION(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 차가운 입김
	//..............................................................................................................
	int MAKE_EF_ICE_RIP_BLOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 무력화
	//..............................................................................................................
	int MAKE_EF_MAGIC_DELETE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	// 기본 대검 공격
	//...............................................................................................................
	int MAKE_EF_BIG_SWORD(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	//...............................................................................................................
	// 	대검 칼날 기본 데미지 ( 약 )
	//...............................................................................................................
	int MAKE_EF_BIG_SWORD0_ED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_BIG_SWORD1_ED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_BIG_SWORD2_ED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	// 기적 스킬 ( 나이트 )
	//...............................................................................................................
	int MAKE_EF_MIRACLE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 거대몬스터 기본 공격
	//..............................................................................................................
	int MAKE_EF_BIG_NPC_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_BIG_NPC_ATTACK0ED(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 거대몬스터 나타날때
	//..............................................................................................................
	int MAKE_EF_BIG_NPC_APPEAR0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 거대몬스터 스킬
	//..............................................................................................................
	int MAKE_EF_BIG_NPC_SKILL0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 날개 테스트
	//..............................................................................................................
	int MAKE_EF_WING0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 애니적용 날개
	//..............................................................................................................
	int MAKE_EF_ANIWING0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 불꽃
	//..............................................................................................................
	int MAKE_EF_FIREFLOWER0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 유료 아이템 
	//..............................................................................................................
	int MAKE_EF_SI_ITEM_ATTACK0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACK1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACK2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACK3(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
		
	int MAKE_EF_SI_ITEM_ATTACKED0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACKED1(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACKED2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_SI_ITEM_ATTACKED3(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 신수 나타날때
	//..............................................................................................................
	int MAKE_EF_HOLY_APPEAR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	int MAKE_EF_HOLY_AURA(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 하르피아 종류 공격시 손이 다르삼 
	//..............................................................................................................
	int MAKE_EF_NPC_FLY_HAUPAI_LR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 비즈XP-610 아이 빔
	//..............................................................................................................
	int MAKE_EF_NPC_BIZ_BEAM(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 신속의 화살
	//..............................................................................................................
	int MAKE_EF_FAST_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 엠블렘 깃발
	//..............................................................................................................
	int MAKE_EF_EMBLEM_FLAG(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 그리즐리 기본공격
	//..............................................................................................................
	int MAKE_EF_GRIZZL_BAS_ATT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 그리즐리 기본데미지 약, 강
	//..............................................................................................................
	int MAKE_EF_GRIZZL_BAS_ATTED_0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_GRIZZL_BAS_ATTED_2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 키메라 엔트 기본공격
	//..............................................................................................................
	int MAKE_EF_CHIME_ANT_BAS_ATT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 키메라 엔트 기본데미지 약, 강
	//..............................................................................................................
	int MAKE_EF_CHIME_ANT_BAS_ATTED_0(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	int MAKE_EF_CHIME_ANT_BAS_ATTED_2(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 방어형 펫 기본동작 이펙트
	//..............................................................................................................
	int	MAKE_EF_DEFENSE_PET_BMOTION(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer, int nBonNum = 4);

	//..............................................................................................................
	// 포포이 연타공격
	//..............................................................................................................
	int	MAKE_EF_POPOI_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 호랑이 최종형태 연속공격스킬
	//..............................................................................................................
	int	MAKE_EF_TIGET_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 동현 테스트 
	//..............................................................................................................
	int MAKE_EF_DONGS_TEST(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);


	//..............................................................................................................
	// 신성한 폭발 
	//..............................................................................................................
	int MAKE_EF_HOLY_BOMB(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 어둠의 폭발 
	//..............................................................................................................
	int MAKE_EF_DARK_BOMB(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 분노 폭발 
	//..............................................................................................................
	int MAKE_EF_WRATH_BOMB(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 장갑 파괴 
	//..............................................................................................................
	int MAKE_EF_GLOVE_DESTRUCTION(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 다크니스 스피어  
	//..............................................................................................................
	int MAKE_EF_ONE_DARKNESS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 트리플 다크니스 
	//..............................................................................................................
	int MAKE_EF_TRIPLE_DARKNESS(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 트리플 파이어 
	//..............................................................................................................
	int MAKE_EF_TRIPLE_FIRE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);



private:
	///-- 8단 콤보 용,  속성 스킬 콤보용 스킬 추가	
	//..............................................................................................................
	// 아이스 필드
	//..............................................................................................................
	int	MAKE_EF_ICE_FIELD(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
		
	//..............................................................................................................
	// 아이스 스피어
	//..............................................................................................................
	int	MAKE_EF_ICE_SPEAR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 라이트 스톰
	//..............................................................................................................
	int	MAKE_EF_LIGHT_STORM(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 운석의 비
	//..............................................................................................................
	int	MAKE_EF_STONE_RAIN(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 윈드 버쉬
	//..............................................................................................................
	int	MAKE_EF_WIND_BUSH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 라운드 파이어
	//..............................................................................................................
	int	MAKE_EF_ROUND_FIRE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 라운드 라이트
	//..............................................................................................................
	int	MAKE_EF_ROUND_LIGHT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 캐스트 스톤
	//..............................................................................................................
	int	MAKE_EF_CAST_STONE(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 대지의 축복
	//..............................................................................................................
	int	MAKE_EF_EARTH_BIND(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 난사
	//..............................................................................................................
	int	MAKE_EF_RANDOM_ARROW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 연속 애니메이션 스킬
	//..............................................................................................................
	int MAKE_EF_CONANISKILL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 열풍강타
	//..............................................................................................................
	int MAKE_EF_FIRESTORM_SMASH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 기열연타
	//..............................................................................................................
	int MAKE_EF_SPIRIT_FIRE_SMACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 아쳐, 스나이퍼 활-범용스킬
	//..............................................................................................................
	int MAKE_BEE_LINE_BOW(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo, int nTailNum, 
						  int nDNum, float fDTime, float fDelTime, int nDType);

	//..............................................................................................................
	// 분노의 검진
	//..............................................................................................................
	int MAKE_EF_WRATH_KNIFE_ATTACK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//..............................................................................................................
	// 서클크래쉬
	//..............................................................................................................
	int MAKE_EF_CIRCLE_CRASH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 얼음의 화살비
	//..............................................................................................................
	int MAKE_EF_ICE_BOW_RAIN(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//..............................................................................................................
	// 얼음의 화살비
	//..............................................................................................................
	int MAKE_EF_HIDE_SENSOR(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);


	///-- 거대유닛 생성시 링크이펙트
	int MAKE_EF_GIANTUNIT_SRC_LINK(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);


	///-- 가드타워 관련 공격이펙트
    int MAKE_G_TOWER_EFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo, int nSrcBonNum, 
		UINT uBillType, UINT uTailType, UINT uAttackedEffId, UINT uAttackedType);

	///-- 거대대포 공격이펙트
	int MAKE_CANNON_EFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo, int nImpacFrame, int nSrcBonNum,
		UINT uBillType, UINT uTailType, UINT uGetEffId, UINT uGetEffType, UINT uPercuEffId, UINT uPercuEffType, UINT uExploEffId, UINT uExploEffType, 
		UINT uAttackedEffId, UINT uAttackedType);

	///-- 거신병 공격 이펙트
	int MAKE_GOLEM_EFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo, int nMImpacFrame, int nImpacFrame,
		UINT uTailType, UINT uRightEffId, UINT uRightEffType, UINT uLeftEffId, UINT uLeftEffType, INT uExploEffId, UINT uExploEffType, UINT uAttackedEffId, UINT uAttackedType);
	
	//...............................................................................................................
	//	마인의 권술
	//...............................................................................................................
	int MAKE_EF_BUNCH_STRENGTH(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	해골전사용 스킬
	//...............................................................................................................
	int MAKE_EF_BONWARSKILL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	해골아쳐용 스킬
	//...............................................................................................................
	int MAKE_EF_BONARCSKILL(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	클래스 지존아이템 - 연결 이펙트
	//...............................................................................................................
	int MAKE_EF_SPECIAL_ITEM_EFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	int MAKE_EF_BASE_ITEM_EFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	도그마 관련 이펙트
	//...............................................................................................................
	int MAKE_EF_DOGMAEFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	루갈 관련 이펙트
	//...............................................................................................................
	int MAKE_EF_RUGALEFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);

	//...............................................................................................................
	//	바라고스 관련 이펙트
	//...............................................................................................................
	int MAKE_EF_BARAGOSEFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	쟈나드 관련 이펙트
	//...............................................................................................................
	int MAKE_EF_JANADEFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	//...............................................................................................................
	//	우로보스 관련 이펙트
	//...............................................................................................................
	int MAKE_EF_UROBOROSEFFECT(EFFECT_ID id,Character *pSrc,Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo,float Timer);
	
	


public:
	
	void CreateAddEffectStart(DWORD SkillCode,Character *pSrc);
	void DeleteAddEffectEnd(DWORD SkillCode,Character *pSrc);

	//...........................................................................................................
	// 아이템 링크 이펙트 추가 by wxywxy
	//...........................................................................................................
	void CreateItemLinkEffect(DWORD Code,Character *pSrc);
	//...........................................................................................................
	// 아이템 링크 이펙트 삭제 by wxywxy
	//...........................................................................................................
	void DeleteItemLinkEffect(int pos,Character *pSrc);

	//...................................................................................................................
	// 기존 파티 맴버가 은신 / 월영 상태이면 처리
	//...................................................................................................................
	int CheckPartiDeleteHide(UINT dPCID);
	//...................................................................................................................
	// 새로운 파티 맴버가 은신 / 월영 상태이면 처리
	//...................................................................................................................
	int CheckPartiHide( UINT dPCID);

	//...................................................................................................................
	// 링크아이템 그림자 매트릭스 만들어 Boa 요
	//...................................................................................................................
	D3DXMATRIX MakeShadowMatrix(Character *pSrc,CVAniModel *pAniModel,D3DXMATRIX matWorld);
	void  ApplyShaowProj(Character *pSrc,CVAniModel *pAniModel,D3DXMATRIX matWorld);	

	//...................................................................................................................
	// 입고 있는 아이템 코드 얻기
	//...................................................................................................................
	int GetWearCode(Character *pChr,int Pos);

	
	//...........................................................................................................
	// 기본공격 1:1 데미지 주는것 처리
	//...........................................................................................................
	int MakeStandAttackProcess(Character *pSrc, Character *pDest,int SrcSetNum  , int SrcSetType  , float SrcTimer,
		int DestSetNum  , int DestSetType  , float DestTimer,LPEFFECT_EXTRA_INFO pExtraInfo);
	//...........................................................................................................
	// 이펙트 셋 소스에서 스팟 처리
	//...........................................................................................................
	int MakeEffectSetSrcLinkProcess(Character *pSrc,int SrcSetNum  , int SrcSetType  , float SrcTimer);

private:

	 list	<CEffectBase *>		m_EffectList;// 이펙트들의 포인터 저장

	 CREATE_EFFECT_MANAGE_STATE	m_EffectState;			// 이펙트에 락을 걸었을때 처음인지 상태값
	 EFFECT_EXTRA_INFO	m_ExtraEffectQueue;				// 이펙트에 락을 걸었을때 데이터 가지고 있을곳 

public:
	
	 EFFECT_TARGET_INFO		m_TargetInfo;				//

public:

	float GetAttackRange(int SkillCode);

	void SetNPC(void)
	{
		m_TargetInfo.SetNPC();
	}

	void SetPC(void)
	{
		m_TargetInfo.SetPC();
	}

	void SetCell(DWORD X,DWORD Y,D3DXVECTOR3 v)
	{
		m_TargetInfo.SetCell( X , Y , v );
	}
	
	///-- by simwoosung 공격주체가 없을때 공격대상 처리를 시행한다.
	void DestTargetHit(Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);
	void DestStandTargetHit(Character *pDest,LPEFFECT_EXTRA_INFO pExtraInfo);
	
	BOOL IsMyRelationUnit( Character *pSrc, Character *pDest );
};


#endif