//.................................................................................................................
//
// CFlyWeaponManager.cpp ( 날아가는 무기 매니저 )													By wxywxy
//
//.................................................................................................................

#include "CFlyWeaponManager.h"
#include "CArrowWeapon.h"

CFlyWeaponManager::CFlyWeaponManager()
{

}

CFlyWeaponManager::~CFlyWeaponManager()
{
	ResetMemory();
}

//.................................................................................................................
// 리스트 비우기
//.................................................................................................................
int CFlyWeaponManager::ResetMemory(void)
{
	std::list	<CFlyWeaponBase *>::iterator i = m_List.begin();

	for( ; i != m_List.end() ; ++i ) 
	{
		CFlyWeaponBase *pData = (*i);
		SAFE_DELETE( pData );
		(*i) = NULL;
	}

	m_List.clear();

	return TRUE;
}


//.................................................................................................................
// 이동 처리
//.................................................................................................................
int CFlyWeaponManager::Update(void)
{
	std::list	<CFlyWeaponBase *>::iterator	i = m_List.begin();

	for( ; i != m_List.end() ; )
	{
		//.........................................................................................................
		// 이동 처리
		//.........................................................................................................
		(*i)->Update();

		//.........................................................................................................
		// 상태가 죽기면 지워 보아요
		//.........................................................................................................
		if( (*i) && (*i)->GetState() == FLYWEAPON_STATE_DESTROY )
		{
			CFlyWeaponBase *pData = (*i);
			SAFE_DELETE( pData );
			(*i) = NULL;

			m_List.erase( i++ );
		}
		//.........................................................................................................
		// 다음으로 이동
		//.........................................................................................................
		else
		{
			i++;
		}
	}

	return TRUE;
}

//.................................................................................................................
// 렌더링
//.................................................................................................................
int CFlyWeaponManager::Render(void)
{
	std::list	<CFlyWeaponBase *> ::iterator i = m_List.begin();

	for( ; i != m_List.end() ; ++i )
	{
		if( (*i)->GetState() == FLYWEAPON_STATE_DESTROY ) continue;

		(*i)->Render();
	}

	return TRUE;
}

//.................................................................................................................
// 날아다니는 무기 맹글어 보아요
//.................................................................................................................
int CFlyWeaponManager::Create(BOOL ISPC,int table_index,BYTE link,D3DXVECTOR3 Curt,D3DXVECTOR3 Dest,FlyWeaponType WeaponType)
{
	CFlyWeaponBase	*pTempBase = NULL;

	switch( WeaponType )
	{
		//.........................................................................................................
		// 화살
		//.........................................................................................................
		case ARROW_WEAPON_TYPE:
			
			pTempBase = SAFE_NEW( CArrowWeapon );			
			
			pTempBase->Create( ISPC , table_index , link , Curt , Dest );

			break;
			
	}

	if( pTempBase != NULL )
		m_List.push_back( pTempBase );
	

	return TRUE;
}

//.................................................................................................................
// 검색후 지우기
//.................................................................................................................
int CFlyWeaponManager::Clear( bool bPC, int table_index )
{
	std::list	<CFlyWeaponBase *>::iterator	i = m_List.begin();

	for( ; i != m_List.end() ; )
	{
		//.........................................................................................................
		// 조건에 맞으면 지우기
		//.........................................................................................................
		if( (*i) && (*i)->m_bPC == bPC && (*i)->m_Index == table_index )
		{
			CFlyWeaponBase * pData = (*i);
			SAFE_DELETE( pData );
			(*i) = NULL;

			m_List.erase( i++ );

			return TRUE;
		}
		//.........................................................................................................
		// 다음으로 이동
		//.........................................................................................................
		else
		{
			i++;
		}
	}

	return FALSE;
}
